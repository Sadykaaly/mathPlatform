# Generated by Django 2.2.6 on 2021-02-28 13:28

import accounts.managers
import accounts.utils
import django.contrib.auth.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('username', models.CharField(blank=True, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, null=True, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='E-mail')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Surname')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=20, null=True, verbose_name='Gender')),
                ('avatar', models.FileField(blank=True, null=True, upload_to=accounts.utils.get_account_upload_path, verbose_name='Avatar')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='SLUG')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted?')),
                ('user_type', models.CharField(choices=[('instructor', 'Instructor'), ('student', 'Student')], default='student', max_length=20, verbose_name='Type')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('-created_at',),
            },
            managers=[
                ('objects', accounts.managers.UserManager()),
                ('objects_with_deleted', accounts.managers.UserManager(with_deleted=True)),
            ],
        ),
    ]
